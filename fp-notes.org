

* CS 3110 Fall 2017: Data Structures and Functional Programming

URL: https://www.cs.cornell.edu/courses/cs3110/2017fa/

#+BEGIN_QUOTE
The key linguistic abstraction of functional languages is the /mathematical function/. A function maps an input to an output; for the same input, it always produces the same output. That is, mathematical functions are stateless: they do not maintain any extra information or state that persists between usages of the function. Functions are first-class: you can use them as input to other functions, and produce functions as output. Expressing everything in terms of functions enables a uniform and simple programming model that is easier to reason about than the procedures and methods found in other families of languages.
#+END_QUOTE

OCaml is a statically-typed and type-safe programming language, featuring algebric datatypes, type inference, parametric polymorphism, garbage collection, and modules.

#+BEGIN_QUOTE
Functional languages have a surprising tendency to predict the future of more mainstream languages. Java brought garbage collection into the mainstream in 1995; Lisp had it in 1958. Java didn't have generics until version 5 in 2004; the ML family had it in 1990. First-class functions and type inference have been incorporated into mainstream languages like Java, C#, and C++ over the last 10 years, long after functional languages introduced them.
#+END_QUOTE

#+BEGIN_QUOTE
Aesthetics do matter. Code isn't written just to be executed by machines. It's also written to communicate to humans. Elegant code is easier to read and maintain. It isn't necessarily easier to write.
#+END_QUOTE

*date fun [⋆⋆⋆]* Define a function that takes an integer d and string m as input and returns true just when d and m form a valid date. Here, a valid date has a month that is one of the following abbreviations: Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sept, Oct, Nov, Dec. And the day must be a number that is between 1 and the minimum number of days in that month, inclusive. For example, if the month is Jan, then the day is between 1 and 31, inclusive, whereas if the month is Feb, then the day is between 1 and 28, inclusive.

#+BEGIN_SRC ocaml

#+END_SRC

Five aspects to learning a PL: syntax, *semantics*, *idioms*, libraries, tools.

* Functional Data Structures

URL: https://cs.uwaterloo.ca/~plragde/flaneries/FDS/

* Programming Languages

URL: https://courses.cs.washington.edu/courses/cse341/12au

Racket /versus/ Lisp: not purely functional (why?), lexically scoped.

* Survey of Programming Languages

URL: https://home.adelphi.edu/~siegfried/cs270/notes.html

* Misc

** Common Lisp

- =consp= is not a convenient function to use to check whether something "is a list"; better to use =listp=, which combines =consp= and =null= (Source: https://eli.thegreenplace.net/2016/common-lisps-consp-and-listp-in-clojure/).
