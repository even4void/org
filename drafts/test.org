#+TITLE:  The title
#+AUTHOR: The author
#+DATE: 26 February, 2020
#+OPTIONS: num:nil H:2 ^:t |:t
#+PROPERTY: header-args:R :session *R* :tangle yes
#+PROPERTY: header-args   :exports both

#+BEGIN_SRC R :exports none
library(xtable)
#+END_SRC

Here's a tiny R function:

#+BEGIN_SRC R
square <- function(x) x*x
square(1:10)
#+END_SRC

Here's a toy example to illustrate a linear regression:

#+BEGIN_SRC R :results value html
n <- 100
x <- runif(n)
y <- 1 + 0.8*x + rnorm(n)
m <- lm(y ~ x)
r <- xtable(summary(m))
print(r, type = "html")
#+END_SRC

Per the Babel doc:

#+BEGIN_SRC R :file 1.png :results graphics file
library(lattice)
xyplot(1:10 ~ 1:10)
#+END_SRC


Holy church of Python!

#+BEGIN_SRC python :session
a = 27 // 4
a
#+END_SRC

#+NAME: with-rownames
| one | 1 | 2 | 3 | 4 |  5 |
| two | 6 | 7 | 8 | 9 | 10 |

#+BEGIN_SRC python :var tab=with-rownames :rownames yes
return [[val + 10 for val in row] for row in tab]
#+END_SRC

#+RESULTS:
| one | 11 | 12 | 13 | 14 | 15 |
| two | 16 | 17 | 18 | 19 | 20 |

Remember Elisp?

#+BEGIN_SRC emacs-lisp :exports both
(defun xor (a b)
  "Exclusive or."
  (if a (not b) b))
(xor nil t)
#+END_SRC
